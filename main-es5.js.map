{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/services/firebase.service.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","declarations","imports","AppComponent","firebaseService","router","title","isSignedIn","hide","email","required","localStorage","getItem","password","console","log","signUp","isloggedIn","signIn","hasError","selector","templateUrl","styleUrls","AppModule","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","providers","bootstrap","HomeComponent","firbaseService","islogout","logout","emit","LoginComponent","FirebaseService","fireAuth","signInWithEmailAndPassword","res","setItem","JSON","stringify","user","createUserWithEmailAndPassword","signOut","removeItem","providedIn","SignupComponent","emailSignup","passwordSignup","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  {path:'Home', component: HomeComponent},\n  { path: 'login', component: LoginComponent}, \n  { path: 'signup', component: SignupComponent} \n\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    [RouterModule.forRoot(routes)]\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { FirebaseService } from './services/firebase.service';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'testapp';\n  isSignedIn = false;\n  hide= true;\n  constructor(public firebaseService: FirebaseService, private router:Router) { }\n  email = new FormControl('', [Validators.required, Validators.email]);\n  \n  ngOnInit() {\n    if (localStorage.getItem('user') !== null) {\n      this.isSignedIn = true;\n    }\n    else {\n      this.isSignedIn = false;\n    }\n  }\n  \n  async onSignup(email: string, password: string) {\n    console.log('test')\n    await this.firebaseService.signUp(email, password)\n    if (this.firebaseService.isloggedIn) {\n      this.isSignedIn = true;\n    }\n  }\n  \n  async onSignin(email: string, password: string) {\n    await this.firebaseService.signIn(email, password)\n    if (this.firebaseService.isloggedIn) {\n      this.isSignedIn = true;\n    }\n  }\n  \n  loggingOut()\n  {\n    this.isSignedIn = false;\n  }\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n  }\n  \n  loginpage()\n  {                                                                                                                                                                                                                                                             \n  // this.router.navigateByUrl('loginComponent'); \n  }                                                                                                                                                                     \n\n\n}\n","<h1 style=\"text-align:center\">Test App</h1>\n<h2 style=\"text-align:center\">Welcome to TestApp</h2>\n<nav> \n<p>Already User: <a routerLink=\"login\" style=\"margin-left:5px\">SIGN IN</a> <span style=\"margin-left:10px\">&nbsp;</span>New User: <a routerLink=\"signup\"> SIGN UP</a></p>\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport  {AngularFireModule} from '@angular/fire';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { FirebaseService } from './services/firebase.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatIconModule} from '@angular/material/icon';\nimport { LoginComponent } from './login/login.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatButtonModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp({\n      apiKey: \"AIzaSyDFxICFtp38kFd3jaZ66tocXxp4L9iZhYU\",\n      authDomain: \"testapp-ccc1f.firebaseapp.com\",\n      projectId: \"testapp-ccc1f\",\n      storageBucket: \"testapp-ccc1f.appspot.com\",\n      messagingSenderId: \"761925779027\",\n      appId: \"1:761925779027:web:c79e395f3d3c7e942390a6\"\n    }),\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    \n  ],\n  providers: [FirebaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n\n@Output() islogout = new EventEmitter<void>()\n  constructor(public firbaseService: FirebaseService) { }\n\n  ngOnInit(): void {\n  }\nlogout()\n{\n  this.firbaseService.logout();\n  this.islogout.emit();\n}\n}\n","<p>You logged In!</p>\n<button (click)=\"logout()\" mat-raised-button color=\"primary\">Log Out</button>\n","<div *ngIf=\"!isSignedIn\" class=\"container\">\n    <h2>Sign In</h2>\n    <mat-form-field>\n      <mat-label>Enter your E-Mail</mat-label>\n      <input matInput type=\"text\" placeholder=\"email\" #email required>\n    </mat-form-field>\n    <br/>\n  \n    <mat-form-field>\n        <mat-label>Enter your password</mat-label>\n        <input matInput type=\"password\" placeholder=\"password\" #password required [type]=\"hide ? 'password' : 'text'\">\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n  \n      <!-- <mat-label>Password</mat-label>\n      <input matInput type=\"password\" placeholder=\"password\" #passwordSignup required> -->\n    </mat-form-field>\n  \n    <div>\n      <button (click)=\"onSignin(email.value, password.value)\" mat-raised-button color=\"primary\">Sign In</button>\n    </div>\n  \n  </div>\n  <app-home *ngIf=\"isSignedIn\" (islogout)=\"loggingOut()\"></app-home>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @Output() islogout = new EventEmitter<void>()\n  isSignedIn = false;\n  hide= true;\n  password: string;\n  email: string;\n  constructor(public firebaseService: FirebaseService) { }\n  \n  ngOnInit() {\n    this.email='';\n    this.password = '';\n    if (localStorage.getItem('user') !== null) {\n      this.isSignedIn = true;\n    }\n    else {\n      this.isSignedIn = false;\n    }\n  }\n  \n  async onSignin(email: string, password: string) {\n    await this.firebaseService.signIn(email, password)\n    if (this.firebaseService.isloggedIn) {\n      this.isSignedIn = true;\n    }\n    \n    \n  }\n  \n  loggingOut()\n  {\n    this.isSignedIn = false;\n    this.email = '';\n    this.password= '';\n  }\n\n\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  isloggedIn = false;\n  constructor(public fireAuth: AngularFireAuth) { }\n  async signIn(email: string, password: string)\n  {\n    await this.fireAuth.signInWithEmailAndPassword(email, password)\n    .then(res => {\n      this.isloggedIn = true;\n      localStorage.setItem('user', JSON.stringify(res.user))\n    })\n  }\n  async signUp(email: string, password: string)\n  {\n    await this.fireAuth.createUserWithEmailAndPassword(email, password)\n    .then(res => {\n      this.isloggedIn = true;\n      localStorage.setItem('user', JSON.stringify(res.user))\n    })\n  }\n  logout(){\n    this.fireAuth.signOut();\n    localStorage.removeItem('user');\n  }\n}\n","<div *ngIf=\"!isSignedIn\" class=\"container\">\n    <h2>Sign Up</h2>\n    <mat-form-field>\n      <mat-label>Enter your E-Mail</mat-label>\n      <input matInput type=\"text\" placeholder=\"email\" #emailSignup required>\n    </mat-form-field>\n    <br/>\n  \n    <mat-form-field>\n        <mat-label>Enter your password</mat-label>\n        <input matInput type=\"password\" placeholder=\"password\" #passwordSignup required [type]=\"hide ? 'password' : 'text'\" autocomplete=\"off\">\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n  \n    </mat-form-field>\n  \n    <div>\n      <button (click)=\"onSignup(emailSignup.value, passwordSignup.value)\" mat-raised-button color=\"primary\">Sign up</button>\n    </div>\n    <p  *ngIf=\"!isSignedIn\">Already User: <a routerLink=\"/login\">Login</a></p>\n  </div>\n  <app-home *ngIf=\"isSignedIn\" (islogout)=\"loggingOut()\"></app-home>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  isSignedIn = false;\n  hide= true;\n  passwordSignup: string;\n  emailSignup : string;\n  constructor(public firebaseService: FirebaseService, private router:Router) { }\n  \n  ngOnInit() {\n    if (localStorage.getItem('user') !== null) {\n      this.isSignedIn = true;\n    }\n    else {\n      this.isSignedIn = false;\n    }\n  }\n  \n  async onSignup(email: string, password: string) {\n    console.log('test')\n    await this.firebaseService.signUp(email, password)\n    if (this.firebaseService.isloggedIn) {\n      this.isSignedIn = true;\n    }\n\n  }\n  \n  async onSignin(email: string, password: string) {\n    await this.firebaseService.signIn(email, password)\n    if (this.firebaseService.isloggedIn) {\n      this.isSignedIn = true;\n    }\n  }\n  \n  loggingOut()\n  {\n    this.isSignedIn = false;\n    this.emailSignup = '';\n    this.passwordSignup = '';\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}